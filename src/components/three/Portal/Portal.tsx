/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 ./public/assets/portal.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Frame: THREE.Mesh;
    PortalStair1: THREE.Mesh;
    PortalStair2: THREE.Mesh;
    Portal: THREE.Mesh;
    Icosphere: THREE.Mesh;
    Icosphere_1: THREE.Mesh;
    Icosphere003: THREE.Mesh;
    Icosphere003_1: THREE.Mesh;
    Icosphere004: THREE.Mesh;
    Icosphere004_1: THREE.Mesh;
    Icosphere005: THREE.Mesh;
    Icosphere005_1: THREE.Mesh;
    Floating_Roots: THREE.Mesh;
    Plane: THREE.Mesh;
    Leaf001: THREE.Mesh;
    Tree001: THREE.Mesh;
    Icosphere001: THREE.Mesh;
    Icosphere001_1: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    Soil: THREE.MeshStandardMaterial;
    Rock: THREE.MeshStandardMaterial;
    Water: THREE.MeshStandardMaterial;
    ["Soil.002"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Bark.001"]: THREE.MeshStandardMaterial;
    Bark: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
  };
};

const Portal = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF("/assets/portal.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Frame.geometry}
        material={materials.Material}
        position={[2.193, 0.749, 0]}
        scale={[0.216, 0.185, 0.216]}
      />
      <mesh
        geometry={nodes.PortalStair1.geometry}
        material={materials["Material.001"]}
        position={[3.938, 0.716, 0]}
        scale={[2.867, 0.352, 1.534]}
      />
      <mesh
        geometry={nodes.PortalStair2.geometry}
        material={materials["Material.002"]}
        position={[3.938, 0.363, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={[-3.43, -0.264, -1.835]}
      />
      <group position={[4.113, -1.253, 4.648]} rotation={[0, -1.136, 0]}>
        <mesh geometry={nodes.Icosphere.geometry} material={materials.Soil} />
        <mesh geometry={nodes.Icosphere_1.geometry} material={materials.Rock} />
      </group>
      <group position={[-10.023, 0.812, 11.499]} scale={[2.61, 1.996, 2.61]}>
        <mesh
          geometry={nodes.Icosphere003.geometry}
          material={materials.Rock}
        />
        <mesh
          geometry={nodes.Icosphere003_1.geometry}
          material={materials.Water}
        />
      </group>
      <group position={[10.881, 3.522, -8.62]} scale={2.558}>
        <mesh
          geometry={nodes.Icosphere004.geometry}
          material={materials.Rock}
        />
        <mesh
          geometry={nodes.Icosphere004_1.geometry}
          material={materials.Soil}
        />
      </group>
      <mesh
        geometry={nodes.Floating_Roots.geometry}
        material={materials["Soil.002"]}
        position={[4.113, -1.253, 4.648]}
        rotation={[0, -1.136, 0]}
      />
      <group
        position={[0.245, 12.341, 1.352]}
        rotation={[0, -1.136, 0]}
        scale={1.554}
      >
        <mesh
          name="Icosphere001"
          geometry={nodes.Icosphere001.geometry}
          material={materials.Bark}
          morphTargetDictionary={nodes.Icosphere001.morphTargetDictionary}
          morphTargetInfluences={nodes.Icosphere001.morphTargetInfluences}
        />
        <mesh
          name="Icosphere001_1"
          geometry={nodes.Icosphere001_1.geometry}
          material={materials["Material.003"]}
          morphTargetDictionary={nodes.Icosphere001_1.morphTargetDictionary}
          morphTargetInfluences={nodes.Icosphere001_1.morphTargetInfluences}
        />
      </group>
    </group>
  );
};

useGLTF.preload("/portal.glb");

export { Portal };
