/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 ./public/assets/portal.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Frame: THREE.Mesh;
    Cube: THREE.Mesh;
    Portal: THREE.Mesh;
    Cube001: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

const Portal = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF("/assets/portal.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Frame.geometry}
        material={materials.Material}
        position={[2.193, 0.749, 0]}
        scale={[0.216, 0.185, 0.216]}
      />
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        position={[3.938, 0.716, 0]}
        scale={[2.867, 0.352, 1.534]}
      />
      <mesh
        geometry={nodes.Portal.geometry}
        material={nodes.Portal.material}
        position={[3.954, 4.119, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[1.469, 0.091, 3.404]}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={materials.Material}
        position={[3.938, 0.363, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={[-3.902, -0.3, -2.087]}
      />
    </group>
  );
};

useGLTF.preload("/portal.glb");

export { Portal };
