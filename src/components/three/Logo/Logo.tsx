/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 ../../../../public/assets/logo.glb -t
*/

import * as THREE from 'three'
import React, { forwardRef, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Curve001_1: THREE.Mesh,
    Curve001_2: THREE.Mesh,
  },
  materials: {
    ['Logo-Main']: THREE.MeshStandardMaterial,
    ['Logo-Var']: THREE.MeshStandardMaterial,
  }
}

const Logo = forwardRef(function Box (props: JSX.IntrinsicElements['group'], ref?: React.Ref<THREE.Group>) {
  const { nodes, materials } = useGLTF('/assets/logo.glb') as GLTFResult
  return (
    <group ref={ref} {...props} dispose={null}>
      <group position={[0, 0.5, 0]} rotation={[Math.PI / 2, 0, 0]} scale={30.244} castShadow receiveShadow>
        <mesh castShadow receiveShadow geometry={nodes.Curve001_1.geometry} material={materials['Logo-Main']} />
        <mesh castShadow receiveShadow geometry={nodes.Curve001_2.geometry} material={materials['Logo-Var']} />
      </group>
    </group>
  )
})

useGLTF.preload('/logo.glb')

export {Logo};